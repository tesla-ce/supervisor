# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: 
      - created
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.version }}
      tag: ${{ steps.vars.outputs.tag }}
    steps: 
      - uses: actions/checkout@v3
      - name: Get version values
        id: vars
        run: |
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        #echo ::set-output name=version::$(cat VERSION)
        #echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Show captured versions
        run: |
          echo 'Version in source code: ${{ steps.vars.outputs.version }}'
          echo 'Release version: ${{ steps.vars.outputs.tag }}'                    
      - name: Check version tag
        uses: nick-invision/assert-action@v1.1.0
        if: github.event_name == 'release'
        with:
          expected: ${{ steps.vars.outputs.tag }}
          actual: ${{ steps.vars.outputs.version }}
          comparison: exact
  docker_tag:
    needs: check
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: set up qemu
        uses: docker/setup-qemu-action@v2
      - name: store version
        id: vars
        run: |
          echo "tag=${github_ref#refs/*/}" >> $GITHUB_OUTPUT
        # echo ::set-output name=tag::${github_ref#refs/*/}
      - name: Show captured versions
        run: |
          echo 'Tag captured: ${{ steps.vars.outputs.tag }}'
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v1
      - name: login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}
      - name: build and push
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          push: true
          tags: teslace/supervisor:${{ steps.vars.outputs.tag }}, teslace/supervisor:latest
          file: docker/dockerfile
      - name: image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: login to tesla ce registry
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.tesla_ce_registry_username }}
            password: ${{ secrets.tesla_ce_registry_token }}
            registry: registry.tesla-ce.eu
      - name: push to tesla ce registry
        run: |
          docker pull teslace/supervisor:${{ steps.vars.outputs.tag }}
          docker tag teslace/supervisor:${{ steps.vars.outputs.tag }} registry.tesla-ce.eu/tesla-ce/supervisor:latest
          docker push registry.tesla-ce.eu/tesla-ce/supervisor:latest
